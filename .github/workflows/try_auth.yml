name: try_auth
on:
  workflow_dispatch:

jobs:
  try_auth:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    env:
      DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::354918379455:role/GitHubDevOIDC
          aws-region: eu-west-1

      - name: Step name
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        # will parse secret called CLIENT_ID and CLIENT_SECRET
        with:
          secret-ids: |
            , dev_dbr
          parse-json-secrets: true

      - name: Get Databricks Token
        id: get_token
        run: |
          
          DATABRICKS_TOKEN=$(curl --request POST \
            --url "${DATABRICKS_HOST}/oidc/v1/token" \
            --user "$CLIENT_ID:$CLIENT_SECRET" \
            --data 'grant_type=client_credentials&scope=all-apis' \
            | jq -r '.access_token')
            
          echo "DATABRICKS_TOKEN=$DATABRICKS_TOKEN" >> $GITHUB_ENV

      - name: Install Databricks CLI
        uses: databricks/setup-cli@49580195afe1ccb06d195764a1d0ae9fabfe2edd #v0.246.0
        with:
          version: 0.246.0

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Install the dependencies
        run: |
          uv sync --all-extras

      - name: Deploy to Databricks
        env:
          DATABRICKS_BUNDLE_ENV: dev
          DATABRICKS_TOKEN: ${{ env.DATABRICKS_TOKEN }}
        run: |
            databricks bundle deploy --var="git_sha=${{ github.sha }}"
     
