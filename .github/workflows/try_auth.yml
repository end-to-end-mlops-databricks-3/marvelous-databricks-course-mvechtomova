name: try_auth
on:
  workflow_dispatch:

jobs:
  try_auth:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [acc, prd]
    environment: ${{ matrix.environment }}
    permissions:
      id-token: write
      contents: read
    env:
      DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.ARN_ROLE }}
          aws-region: eu-west-1

      - name: Step name
        uses: aws-actions/aws-secretsmanager-get-secrets@5e19ff380d035695bdd56bbad320ca535c9063f2 #v2.0.9
        # will parse secret called DATABRICKS_CLIENT_ID and DATABRICKS_CLIENT_SECRET
        with:
          secret-ids: |
            , ${{ vars.SECRET_ID }}
          parse-json-secrets: true

      - name: Install Databricks CLI
        uses: databricks/setup-cli@49580195afe1ccb06d195764a1d0ae9fabfe2edd #v0.246.0
        with:
          version: 0.246.0

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Install the dependencies
        run: |
          uv sync --all-extras

      - name: Deploy to Databricks
        env:
          DATABRICKS_BUNDLE_ENV: ${{ matrix.environment }}
        run: |
            if [ "${{ matrix.environment }}" = "prd" ]; then
            echo "VERSION=$(cat version.txt)" > version.txt
            git tag $VERSION
            git push origin $VERSION
            fi
            databricks bundle deploy --var="git_sha=${{ github.sha }}"
     
